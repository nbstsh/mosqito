{"version":3,"sources":["components/Palette/Palette.module.scss","components/MosqitoContainer./MosqitoContainer.module.scss","components/HandDetection/HandDetection.utils.js","contexts/HandDrawingContext/HandDrawing.actions.js","contexts/HandDrawingContext/HandDrawing.reducer.js","contexts/HandDrawingContext/HandDrawing.context.js","components/HandDetection/HandDetection.jsx","components/Palette/Palette.utils.js","components/Palette/Palette.jsx","components/Mosqito/Mosqiito.jsx","components/MosqitoContainer./MosqitoContainer.jsx","App.js","serviceWorker.js","index.js","components/Mosqito/Mosqito.module.scss","components/HandDetection/HandDetection.module.scss"],"names":["module","exports","stage","container","modelParams","flipHorizontal","imageScaleFactor","maxNumBoxes","iouThreshold","scoreThreshold","startVideo","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","videoEl","videoConstraints","stream","wrap","_context","prev","next","Error","handTrack","sent","audio","video","navigator","mediaDevices","getUserMedia","srcObject","stop","_x","apply","this","arguments","loadModel","_ref2","_callee2","_context2","abrupt","initHandDetection","_ref3","_callee3","_context3","t0","console","error","_x2","actionTypes","setCurrentPoints","x","y","type","payload","reducer","state","action","objectSpread","currentPoints","isDrawing","drawingLine","currentPointerPoints","count","initialState","HandDrawingContext","createContext","HandDrawingProvider","children","_useReducer","useReducer","_useReducer2","slicedToArray","dispatch","react_default","createElement","Provider","value","HandDetection","_useHandDetectionWith","interval","length","undefined","videoRef","useRef","_useState","useState","_useState2","model","setModel","_useState3","_useState4","isReady","setIsReady","_useState5","_useState6","predictions","setPredictions","useEffect","current","then","catch","err","setInterval","_ref4","_callee4","_context4","detect","useHandDetectionWithPredictinos","_useContext","useContext","_predictions$0$bbox","bbox","width","height","className","style","videoBox","ref","window","innerWidth","innerHeight","LINE_OPTION","points","stroke","Konva","Util","getRandomColor","tension","isValidPoints","Palette","_useContext$state","layerRef","line","color","options","Line","initLine","add","concat","toConsumableArray","draw","addPoints","setCurrentPointerPoints","ReactKonva","Mosqito","mosqito","top","left","version","id","xmlns","xmlnsXlink","viewBox","xmlSpace","body","d","wing","MosqitoContainer","Mosqiito","App","app","HandDrawing_context_HandDrawingProvider","components_HandDetection_HandDetection","components_Palette_Palette","MosqitoContainerMosqitoContainer","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","registration","unregister","shake"],"mappings":"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","file":"static/js/main.b695efff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stage\":\"Palette_stage__g1hmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MosqitoContainer_container__21plt\"};","import { useState, useRef, useEffect } from 'react';\nimport * as handTrack from 'handtrackjs';\n\nconst modelParams = {\n\tflipHorizontal: true, // flip e.g for video\n\timageScaleFactor: 0.5, // reduce input image size for gains in speed.\n\tmaxNumBoxes: 1, // maximum number of boxes to detect\n\tiouThreshold: 0.5, // ioU threshold for non-max suppression\n\tscoreThreshold: 0.79 // confidence threshold for predictions.\n};\n\nconst startVideo = async videoEl => {\n\tif (!videoEl) throw new Error('Video element needs to be set.');\n\n\tconst status = await handTrack.startVideo(videoEl);\n\tif (!status) throw new Error('Permission denied.');\n\n\tconst videoConstraints = {\n\t\taudio: false,\n\t\tvideo: true\n\t};\n\n\tconst stream = await navigator.mediaDevices.getUserMedia(videoConstraints);\n\tvideoEl.srcObject = stream;\n};\n\nconst loadModel = async () => {\n\treturn await handTrack.load(modelParams);\n};\n\nconst initHandDetection = async videoEl => {\n\ttry {\n\t\tawait startVideo(videoEl);\n\t\treturn await loadModel();\n\t} catch (e) {\n\t\thandTrack.stopVideo(videoEl);\n\t\tconsole.error(e);\n\t}\n};\n\nexport const useHandDetectionWithPredictinos = (interval = 500) => {\n\tconst videoRef = useRef(null);\n\tconst [model, setModel] = useState(null);\n\tconst [isReady, setIsReady] = useState(false);\n\tconst [predictions, setPredictions] = useState(null);\n\n\tuseEffect(() => {\n\t\tinitHandDetection(videoRef.current)\n\t\t\t.then(setModel)\n\t\t\t.catch(err => console.error('Something went wrong at init.'));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (!model) return;\n\n\t\tconst proceedDetection = async () => {\n\t\t\tconst predictions = await model.detect(videoRef.current);\n\t\t\tsetPredictions(predictions);\n\t\t};\n\t\tsetInterval(proceedDetection, interval);\n\t\tsetIsReady(true);\n\t}, [model, interval]);\n\n\treturn {\n\t\tvideoRef,\n\t\tisReady,\n\t\tpredictions\n\t};\n};\n","export const actionTypes = {\n\tSET_CURRENT_POINTS: 'SET_CURRENT_POINTS',\n\tSTART_DRAWING: 'START_DRAWING',\n\tFINISH_DRAWING: 'FINISH_DRAWING',\n\tCOUNT: 'COUNT',\n\tSET_CURRENT_POINTER_POINTS: 'SET_CURRENT_POINTER_POINTS'\n};\n\nexport const setCurrentPoints = (x, y) => ({\n\ttype: actionTypes.SET_CURRENT_POINTS,\n\tpayload: { x, y }\n});\n\nexport const startDrawing = drawingLine => ({\n\ttype: actionTypes.START_DRAWING,\n\tpayload: drawingLine\n});\n\nexport const finishDrawing = () => ({\n\ttype: actionTypes.FINISH_DRAWING\n});\n\nexport const countUp = () => ({\n\ttype: actionTypes.COUNT\n});\n\nexport const setCurrentPointerPoints = (x, y) => ({\n\ttype: actionTypes.SET_CURRENT_POINTER_POINTS,\n\tpayload: { x, y }\n});\n","import { actionTypes } from './HandDrawing.actions';\n\nexport const reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase actionTypes.SET_CURRENT_POINTS:\n\t\t\treturn { ...state, currentPoints: action.payload };\n\t\tcase actionTypes.START_DRAWING:\n\t\t\treturn { ...state, isDrawing: true, drawingLine: action.payload };\n\t\tcase actionTypes.FINISH_DRAWING:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisDrawing: false,\n\t\t\t\tdrawingLine: null,\n\t\t\t\tcurrentPointerPoints: { x: null, y: null },\n\t\t\t\tcount: 0\n\t\t\t};\n\t\tcase actionTypes.COUNT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcount: state.count < 10 ? state.count + 1 : 0\n\t\t\t};\n\t\tcase actionTypes.SET_CURRENT_POINTER_POINTS:\n\t\t\treturn { ...state, currentPointerPoints: action.payload, count: 0 };\n\t\tdefault:\n\t\t\tthrow new Error('Invalid action provided.');\n\t}\n};\n\nexport const initialState = {\n\tcurrentPoints: { x: null, y: null },\n\tcurrentPointerPoints: { x: null, y: null },\n\tisDrawing: false,\n\tdrawingLine: null,\n\tcount: 0\n};\n","import React, { createContext, useReducer } from 'react';\n\nimport { reducer, initialState } from './HandDrawing.reducer';\n\nexport const HandDrawingContext = createContext();\n\nexport const HandDrawingProvider = ({ children }) => {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\n\treturn (\n\t\t<HandDrawingContext.Provider value={{ state, dispatch }}>\n\t\t\t{children}\n\t\t</HandDrawingContext.Provider>\n\t);\n};\n","import React, { useContext, useEffect } from 'react';\n\nimport style from './HandDetection.module.scss';\n\nimport { useHandDetectionWithPredictinos } from './HandDetection.utils';\nimport { HandDrawingContext } from '../../contexts/HandDrawingContext/HandDrawing.context';\nimport { setCurrentPoints } from '../../contexts/HandDrawingContext/HandDrawing.actions';\n\nconst HandDetection = () => {\n\tconst { videoRef, isReady, predictions } = useHandDetectionWithPredictinos(\n\t\t100\n\t);\n\tconst { state, dispatch } = useContext(HandDrawingContext);\n\n\tuseEffect(() => {\n\t\tif (!predictions || !predictions.length)\n\t\t\treturn dispatch(setCurrentPoints(null, null));\n\n\t\tconst {\n\t\t\tbbox: [x, y, width, height]\n\t\t} = predictions[0];\n\t\tconst currentPointX = x + width / 2;\n\t\tconst currentPointY = y + height / 2;\n\n\t\tdispatch(setCurrentPoints(currentPointX, currentPointY));\n\t}, [predictions, dispatch]);\n\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t{!isReady && <h1>Loading ...</h1>}\n\t\t\t{/* <pre>{JSON.stringify(state, null, 4)}</pre> */}\n\t\t\t<div className={style.videoBox}>\n\t\t\t\t<video\n\t\t\t\t\tclassName={style.video}\n\t\t\t\t\tref={videoRef}\n\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\theight={window.innerHeight}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HandDetection;\n","import Konva from 'konva';\n\nconst randomColor = Konva.Util.getRandomColor();\n\nconst LINE_OPTION = {\n\tx: 0,\n\ty: 0,\n\tpoints: [],\n\tstroke: randomColor,\n\ttension: 0.5\n};\n\nconst isValidPoints = (x, y) => {\n\treturn typeof x === 'number' && typeof y === 'number';\n};\n\nexport const initLine = (x, y, color) => {\n\tif (!isValidPoints(x, y)) throw new Error('Invalid point was given!');\n\n\tconst options = color ? { ...LINE_OPTION, stroke: color } : LINE_OPTION;\n\toptions.points = [x, y];\n\treturn new Konva.Line(options);\n};\n\nexport const addPoints = (line, x, y) => {\n\tif (!line) throw new Error('Line must be provided!');\n\tif (!isValidPoints(x, y)) throw new Error('Invalid point was given!');\n\n\tline.points([...line.points(), x, y]);\n\tline.draw();\n};\n","import React, { useContext, useRef, useEffect } from 'react';\n\nimport style from './Palette.module.scss';\n\nimport { HandDrawingContext } from '../../contexts/HandDrawingContext/HandDrawing.context';\nimport { initLine, addPoints } from './Palette.utils';\nimport {\n\tstartDrawing,\n\tfinishDrawing,\n\tsetCurrentPointerPoints,\n\tcountUp\n} from '../../contexts/HandDrawingContext/HandDrawing.actions';\n\nimport { Stage, Layer } from 'react-konva';\n\nconst Palette = () => {\n\tconst {\n\t\tstate: {\n\t\t\tisDrawing,\n\t\t\tdrawingLine,\n\t\t\tcurrentPoints,\n\t\t\t// currentPointerPoints,\n\t\t\tcount\n\t\t},\n\t\tdispatch\n\t} = useContext(HandDrawingContext);\n\tconst layerRef = useRef(null);\n\n\tconst { x, y } = currentPoints;\n\n\tuseEffect(() => {\n\t\tif (isDrawing || !x || !y) return;\n\n\t\tconst line = initLine(currentPoints.x, currentPoints.y);\n\t\tdispatch(startDrawing(line));\n\n\t\t// add line to layer\n\t\tlayerRef.current.add(line);\n\t}, [isDrawing, currentPoints, dispatch]);\n\n\tuseEffect(() => {\n\t\tif (!isDrawing || !drawingLine) return;\n\n\t\t// detect whether or not user keeps drawing\n\t\tif (x && y) {\n\t\t\taddPoints(drawingLine, x, y);\n\t\t\tdispatch(setCurrentPointerPoints(x, y));\n\t\t} else {\n\t\t\tdispatch(countUp());\n\t\t}\n\t}, [isDrawing, drawingLine, currentPoints, dispatch]);\n\n\tuseEffect(() => {\n\t\tif (count < 10) return;\n\n\t\tdispatch(finishDrawing());\n\t}, [count]);\n\treturn (\n\t\t<Stage\n\t\t\tclassName={style.stage}\n\t\t\twidth={window.innerWidth}\n\t\t\theight={window.innerHeight}\n\t\t>\n\t\t\t<Layer ref={layerRef}>\n\t\t\t\t{/* <Pointer {...currentPointerPoints} /> */}\n\t\t\t</Layer>\n\t\t</Stage>\n\t);\n};\n\nexport default Palette;\n","import React from 'react';\n\nimport style from './Mosqito.module.scss';\n\nconst Mosqito = ({ x, y }) => {\n\tconst width = 30;\n\tconst height = 30;\n\n\treturn (\n\t\t<svg\n\t\t\tclassName={style.mosqito}\n\t\t\tstyle={{\n\t\t\t\twidth, \n\t\t\t\theight,\n\t\t\t\ttop: y - height / 2,\n\t\t\t\tleft: x - width / 2\n\t\t\t}}\n\t\t\tversion='1.1'\n\t\t\tid='_x32_'\n\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\txmlnsXlink='http://www.w3.org/1999/xlink'\n\t\t\tx='0px'\n\t\t\ty='0px'\n\t\t\tviewBox='0 0 512 512'\n\t\t\txmlSpace='preserve'\n\t\t>\n\t\t\t<g>\n\t\t\t\t<path\n\t\t\t\t\tclassName={style.body}\n\t\t\t\t\td='M209.041,242.541c10.009-8.284,16.391-20.807,16.391-34.812c0-24.941-20.226-45.16-45.168-45.16\n        c-13.788,0-26.134,6.189-34.418,15.932c-6.366-17.214-22.926-29.486-42.364-29.486c-24.94,0-45.159,20.227-45.159,45.168\n        c0,24.941,20.219,45.168,45.159,45.168c0.274,0,0.54-0.016,0.806-0.024L24.985,386.965c-2.232,3.788-0.983,8.678,2.805,10.927\n        l2.748,1.62c3.788,2.24,8.678,0.983,10.919-2.812l94.816-145.407c11.444,21.081,24.828,40.26,39.301,57.53l-34.352,56.304v52.525\n        h14.626v-48.416l29.816-48.866c4.464,4.916,9.018,9.662,13.619,14.24l-14.143,40.824l0.702,82.51l14.626-0.129l-0.677-79.98\n        l11.128-32.12c3.788,3.473,7.599,6.825,11.427,10.081l14.578,75.726l-3.538,70.608l14.618,0.734l3.626-72.373l-11.66-60.527\n        c9.235,7.011,18.43,13.394,27.423,19.147l25.255,49.688L296.597,512l14.61-0.79l-4.118-76.29l-16.23-31.944\n        c25.288,22.08,53.879,29.534,75.013,29.534c44.769,0,80.802-28.584,72.099-63.396C374.497,320.765,209.041,242.541,209.041,242.541\n        z'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tclassName={style.wing}\n\t\t\t\t\td='M293.873,244.604c26.335-13.168,249.812-114.954,179.954-184.345\n        c-71.012-70.528-187.61,139.605-201.897,166.794C258.85,251.921,267.538,257.772,293.873,244.604z'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tclassName={style.wing}\n\t\t\t\t\td='M487.872,253.613c-7.639-68.795-161.612-6.221-181.097,2.217c-17.834,7.72-15.69,14.642,4.198,18.978\n        C330.869,279.143,495.383,321.288,487.872,253.613z'\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\tclassName={style.wing}\n\t\t\t\t\td='M329.233,100.938C343.134,46.543,344.585-3.258,301.036,0.167C223.925,6.235,242.629,156.614,253,214.844\n        C263.927,194.819,293.727,143.092,329.233,100.938z'\n\t\t\t\t/>\n\t\t\t</g>\n\t\t</svg>\n\t);\n};\n\nexport default Mosqito;\n","import React, { useContext } from 'react';\nimport Mosqito from '../Mosqito/Mosqiito';\n\nimport style from './MosqitoContainer.module.scss';\n\nimport { HandDrawingContext } from '../../contexts/HandDrawingContext/HandDrawing.context';\n\nconst MosqitoContainer = () => {\n\tconst {\n\t\tstate: { currentPointerPoints }\n\t} = useContext(HandDrawingContext);\n\n\treturn (\n\t\t<div className={style.container}>\n\t\t\t<Mosqito {...currentPointerPoints} />\n\t\t</div>\n\t);\n};\n\nexport default MosqitoContainer;\n","import React from 'react';\nimport style from './App.module.scss';\nimport HandDetection from './components/HandDetection/HandDetection';\nimport { HandDrawingProvider } from './contexts/HandDrawingContext/HandDrawing.context';\nimport Palette from './components/Palette/Palette';\nimport MosqitoContainer from './components/MosqitoContainer./MosqitoContainer';\n\nfunction App() {\n\treturn (\n\t\t<div className={style.app}>\n\t\t\t<HandDrawingProvider>\n\t\t\t\t<HandDetection />\n\t\t\t\t<Palette />\n\t\t\t\t<MosqitoContainer />\n\t\t\t</HandDrawingProvider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mosqito\":\"Mosqito_mosqito__C9g0q\",\"wing\":\"Mosqito_wing__yUOhz\",\"shake\":\"Mosqito_shake__FMEqq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HandDetection_container__3DYE8\",\"videoBox\":\"HandDetection_videoBox__1snqZ\",\"video\":\"HandDetection_video__2y3Gn\"};"],"sourceRoot":""}